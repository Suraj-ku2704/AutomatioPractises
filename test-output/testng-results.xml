<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="2" passed="1" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-06-27T10:52:32 IST" name="GlobalApp" finished-at="2024-06-27T10:52:45 IST" duration-ms="13066">
    <groups>
    </groups>
    <test started-at="2024-06-27T10:52:32 IST" name="Integration" finished-at="2024-06-27T10:52:45 IST" duration-ms="13066">
      <class name="frameworkPractice.Tests.ErrorValidationTest">
        <test-method is-config="true" signature="launchApp()[pri:0, instance:frameworkPractice.Tests.ErrorValidationTest@5f354bcf]" started-at="2024-06-27T10:52:32 IST" name="launchApp" finished-at="2024-06-27T10:52:38 IST" duration-ms="6456" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="loginErrorValidation(java.util.HashMap,java.util.HashMap)[pri:0, instance:frameworkPractice.Tests.ErrorValidationTest@5f354bcf]" started-at="2024-06-27T10:52:39 IST" name="loginErrorValidation" data-provider="getData" finished-at="2024-06-27T10:52:39 IST" duration-ms="715" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedCountry=India, cvvNum=123, cardUserName=Suraj, incorrectPassWord=Tst@123, countrySearchText=ind, userName=surajunnikrishnan@gmail.com, PassWord=Test@123}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{item=[ADIDAS ORIGINAL, IPHONE 13 PRO]}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Incorrect email or password.] but found [Incorrect email ors password.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Incorrect email or password.] but found [Incorrect email ors password.]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at org.testng.Assert.assertEquals(Assert.java:639)
at frameworkPractice.Tests.ErrorValidationTest.loginErrorValidation(ErrorValidationTest.java:18)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1130)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:630)
at java.base/java.lang.Thread.run(Thread.java:831)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginErrorValidation -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:frameworkPractice.Tests.ErrorValidationTest@5f354bcf]" started-at="2024-06-27T10:52:40 IST" name="tearDown" finished-at="2024-06-27T10:52:40 IST" duration-ms="271" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- frameworkPractice.Tests.ErrorValidationTest -->
      <class name="frameworkPractice.Tests.SubmitOrderTest">
        <test-method is-config="true" signature="launchApp()[pri:0, instance:frameworkPractice.Tests.SubmitOrderTest@be68757]" started-at="2024-06-27T10:52:32 IST" name="launchApp" finished-at="2024-06-27T10:52:39 IST" duration-ms="6549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- launchApp -->
        <test-method signature="SubmitOrder(java.util.HashMap,java.util.HashMap)[pri:0, instance:frameworkPractice.Tests.SubmitOrderTest@be68757]" started-at="2024-06-27T10:52:39 IST" name="SubmitOrder" data-provider="getData" finished-at="2024-06-27T10:52:44 IST" duration-ms="5880" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{expectedCountry=India, cvvNum=123, cardUserName=Suraj, incorrectPassWord=Tst@123, countrySearchText=ind, userName=surajunnikrishnan@gmail.com, PassWord=Test@123}]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[{item=[ADIDAS ORIGINAL, IPHONE 13 PRO]}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SubmitOrder -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:frameworkPractice.Tests.SubmitOrderTest@be68757]" started-at="2024-06-27T10:52:45 IST" name="tearDown" finished-at="2024-06-27T10:52:45 IST" duration-ms="237" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- frameworkPractice.Tests.SubmitOrderTest -->
    </test> <!-- Integration -->
  </suite> <!-- GlobalApp -->
</testng-results>
